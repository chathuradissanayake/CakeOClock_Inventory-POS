@page "/addinventory"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IAddInventoryUseCase AddInventoryUseCase

<h3>Add Inventory</h3> <br/>
<EditForm Model="inventory" OnValidSubmit="SaveInventory">

    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" class="form-control" @bind-Value="inventory.InventoryName"/>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="name" class="form-control" @bind-Value="inventory.Quantity" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="name" class="form-control" @bind-Value="inventory.Price" />
    </div>
    <br/>
    <button type="submit" class="btn btn-outline-primary">Save</button>
    <button type="button" class="btn btn-outline-primary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private Inventory inventory = new Inventory();


    private async Task SaveInventory()
    {
        await AddInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
